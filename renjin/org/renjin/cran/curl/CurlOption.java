package org.renjin.cran.curl;

/**
 * Curl options tables
 */
public enum CurlOption {
  ACCEPT_ENCODING(10102, CurlOptionType.STRING),
  ACCEPTTIMEOUT_MS(212),
  ADDRESS_SCOPE(171),
  APPEND(50),
  AUTOREFERER(58),
  BUFFERSIZE(98),
  CAINFO(10065),
  CAPATH(10097),
  CERTINFO(172),
  CHUNK_BGN_FUNCTION(20198),
  CHUNK_DATA(10201),
  CHUNK_END_FUNCTION(20199),
  CLOSESOCKETDATA(10209),
  CLOSESOCKETFUNCTION(20208),
  CONNECT_ONLY(141),
  CONNECTTIMEOUT(78),
  CONNECTTIMEOUT_MS(156),
  CONV_FROM_NETWORK_FUNCTION(20142),
  CONV_FROM_UTF8_FUNCTION(20144),
  CONV_TO_NETWORK_FUNCTION(20143),
  COOKIE(10022),
  COOKIEFILE(10031),
  COOKIEJAR(10082),
  COOKIELIST(10135),
  COOKIESESSION(96),
  COPYPOSTFIELDS(10165),
  CRLF(27),
  CRLFILE(10169),
  CUSTOMREQUEST(10036),
  DEBUGDATA(10095),
  DEBUGFUNCTION(20094),
  DEFAULT_PROTOCOL(10238),
  DIRLISTONLY(48),
  DNS_CACHE_TIMEOUT(92),
  DNS_INTERFACE(10221),
  DNS_LOCAL_IP4(10222),
  DNS_LOCAL_IP6(10223),
  DNS_SERVERS(10211),
  DNS_USE_GLOBAL_CACHE(91),
  EGDSOCKET(10077),
  ERRORBUFFER(10010),
  EXPECT_100_TIMEOUT_MS(227),
  FAILONERROR(45),
  FILETIME(69),
  FNMATCH_DATA(10202),
  FNMATCH_FUNCTION(20200),
  FOLLOWLOCATION(52),
  FORBID_REUSE(75),
  FRESH_CONNECT(74),
  FTP_ACCOUNT(10134),
  FTP_ALTERNATIVE_TO_USER(10147),
  FTP_CREATE_MISSING_DIRS(110),
  FTP_FILEMETHOD(138),
  FTP_RESPONSE_TIMEOUT(112),
  FTP_SKIP_PASV_IP(137),
  FTP_SSL_CCC(154),
  FTP_USE_EPRT(106),
  FTP_USE_EPSV(85),
  FTP_USE_PRET(188),
  FTPPORT(10017),
  FTPSSLAUTH(129),
  GSSAPI_DELEGATION(210),
  HEADER(42),
  HEADERDATA(10029),
  HEADERFUNCTION(20079),
  HEADEROPT(229),
  HTTP200ALIASES(10104),
  HTTP_CONTENT_DECODING(158),
  HTTP_TRANSFER_DECODING(157),
  HTTP_VERSION(84),
  HTTPAUTH(107),
  HTTPGET(80, CurlOptionType.BOOLEAN),
  HTTPHEADER(10023),
  HTTPPOST(10024, CurlOptionType.BOOLEAN),
  HTTPPROXYTUNNEL(61),
  IGNORE_CONTENT_LENGTH(136),
  INFILESIZE(14),
  INFILESIZE_LARGE(30115),
  INTERFACE(10062),
  INTERLEAVEDATA(10195),
  INTERLEAVEFUNCTION(20196),
  IOCTLDATA(10131),
  IOCTLFUNCTION(20130),
  IPRESOLVE(113),
  ISSUERCERT(10170),
  KEYPASSWD(10026),
  KRBLEVEL(10063),
  LOCALPORT(139),
  LOCALPORTRANGE(140),
  LOGIN_OPTIONS(10224),
  LOW_SPEED_LIMIT(19),
  LOW_SPEED_TIME(20),
  MAIL_AUTH(10217),
  MAIL_FROM(10186),
  MAIL_RCPT(10187),
  MAX_RECV_SPEED_LARGE(30146),
  MAX_SEND_SPEED_LARGE(30145),
  MAXCONNECTS(71),
  MAXFILESIZE(114),
  MAXFILESIZE_LARGE(30117),
  MAXREDIRS(68),
  NETRC(51),
  NETRC_FILE(10118),
  NEW_DIRECTORY_PERMS(160),
  NEW_FILE_PERMS(159),
  NOBODY(44, CurlOptionType.BOOLEAN),
  NOPROGRESS(43, CurlOptionType.BOOLEAN),
  NOPROXY(10177, CurlOptionType.BOOLEAN),
  NOSIGNAL(99, CurlOptionType.BOOLEAN),
  OBSOLETE40(10040),
  OBSOLETE72(72),
  OPENSOCKETDATA(10164),
  OPENSOCKETFUNCTION(20163),
  PASSWORD(10174),
  PATH_AS_IS(234),
  PINNEDPUBLICKEY(10230),
  PIPEWAIT(237),
  PORT(3),
  POST(47, CurlOptionType.BOOLEAN),
  POSTFIELDS(10015),
  POSTFIELDSIZE(60, CurlOptionType.INTEGER),
  POSTFIELDSIZE_LARGE(30120),
  POSTQUOTE(10039),
  POSTREDIR(161),
  PREQUOTE(10093),
  PRIVATE(10103),
  PROGRESSDATA(10057),
  PROGRESSFUNCTION(20056),
  PROTOCOLS(181),
  PROXY(10004),
  PROXY_SERVICE_NAME(10235),
  PROXY_TRANSFER_MODE(166),
  PROXYAUTH(111),
  PROXYHEADER(10228),
  PROXYPASSWORD(10176),
  PROXYPORT(59),
  PROXYTYPE(101),
  PROXYUSERNAME(10175),
  PROXYUSERPWD(10006),
  PUT(54, CurlOptionType.BOOLEAN),
  QUOTE(10028),
  RANDOM_FILE(10076),
  RANGE(10007),
  READDATA(10009),
  READFUNCTION(20012),
  REDIR_PROTOCOLS(182),
  REFERER(10016),
  RESOLVE(10203),
  RESUME_FROM(21),
  RESUME_FROM_LARGE(30116),
  RTSP_CLIENT_CSEQ(193),
  RTSP_REQUEST(189),
  RTSP_SERVER_CSEQ(194),
  RTSP_SESSION_ID(10190),
  RTSP_STREAM_URI(10191),
  RTSP_TRANSPORT(10192),
  SASL_IR(218),
  SEEKDATA(10168),
  SEEKFUNCTION(20167),
  SERVICE_NAME(10236),
  SHARE(10100),
  SOCKOPTDATA(10149),
  SOCKOPTFUNCTION(20148),
  SOCKS5_GSSAPI_NEC(180),
  SOCKS5_GSSAPI_SERVICE(10179),
  SSH_AUTH_TYPES(151),
  SSH_HOST_PUBLIC_KEY_MD5(10162),
  SSH_KEYDATA(10185),
  SSH_KEYFUNCTION(20184),
  SSH_KNOWNHOSTS(10183),
  SSH_PRIVATE_KEYFILE(10153),
  SSH_PUBLIC_KEYFILE(10152),
  SSL_CIPHER_LIST(10083),
  SSL_CTX_DATA(10109),
  SSL_CTX_FUNCTION(20108),
  SSL_ENABLE_ALPN(226),
  SSL_ENABLE_NPN(225),
  SSL_FALSESTART(233),
  SSL_OPTIONS(216),
  SSL_SESSIONID_CACHE(150),
  SSL_VERIFYHOST(81),
  SSL_VERIFYPEER(64),
  SSL_VERIFYSTATUS(232),
  SSLCERT(10025),
  SSLCERTTYPE(10086),
  SSLENGINE(10089),
  SSLENGINE_DEFAULT(90),
  SSLKEY(10087),
  SSLKEYTYPE(10088),
  SSLVERSION(32),
  STDERR(10037),
  STREAM_DEPENDS(10240),
  STREAM_DEPENDS_E(10241),
  STREAM_WEIGHT(239),
  TCP_KEEPALIVE(213),
  TCP_KEEPIDLE(214),
  TCP_KEEPINTVL(215),
  TCP_NODELAY(121),
  TELNETOPTIONS(10070),
  TFTP_BLKSIZE(178),
  TIMECONDITION(33),
  TIMEOUT(13),
  TIMEOUT_MS(155),
  TIMEVALUE(34),
  TLSAUTH_PASSWORD(10205),
  TLSAUTH_TYPE(10206),
  TLSAUTH_USERNAME(10204),
  TRANSFER_ENCODING(207),
  TRANSFERTEXT(53),
  UNIX_SOCKET_PATH(10231),
  UNRESTRICTED_AUTH(105),
  UPLOAD(46),
  URL(10002, CurlOptionType.STRING),
  USE_SSL(119, CurlOptionType.BOOLEAN),
  USERAGENT(10018, CurlOptionType.STRING),
  USERNAME(10173, CurlOptionType.STRING),
  USERPWD(10005, CurlOptionType.STRING),
  VERBOSE(41, CurlOptionType.BOOLEAN),
  WILDCARDMATCH(197),
  WRITEDATA(10001),
  WRITEFUNCTION(20011),
  XFERINFOFUNCTION(20219),
  XOAUTH2_BEARER(10220);

  private final int code;
  private final CurlOptionType type;

  CurlOption(int code) {
    this.code = code;
    this.type = CurlOptionType.UNKNOWN;
  }

  CurlOption(int code, CurlOptionType type) {
    this.code = code;
    this.type = type;
  }

  public CurlOptionType getType() {
    return type;
  }

  public static CurlOption fromCode(int code) {
    for (CurlOption curlOption : values()) {
      if(curlOption.code == code) {
        return curlOption;
      }
    }
    throw new IllegalArgumentException("invalid option: " + code);
  }
}
